<idea-plugin>
    <id>com.github.xiaolyuh.mrtf-git-flow-4idea</id>
    <name>GitFlowPlus</name>
    <vendor email="xiaolyuh@163.com" url="https://xiaolyuh.blog.csdn.net/article/details/105150446">汪雨浩</vendor>

    <description>
        <![CDATA[
     This is a branch management plug-in suitable for the <a href="https://xiaolyuh.blog.csdn.net/article/details/105180250">mrtf git flow</a> (master, release, test, feature) process <a href="https://xiaolyuh.blog.csdn.net/article/details/105150446">Usage Guide</a>. <br>
     The biggest advantage is that it reduces the operations of switching branches and merging branches during agile development, and reduces the labor cost of branch management. <br>
      <br>
     Main problems solved:<br>
     1. Simplify the branch operation steps in daily work, such as creating new branches, testing, publishing, Merge Request and other operations; <br>
     2. Reduce the probability of errors during branch operations; <br>
     3. Code submission Commit information specification verification; <br>
     <br>
     The main functions are as follows:
     1. Quickly create new development branches and repair branches based on the trunk branch;<br>
     2. Quickly rebuild the test branch and release branch based on the trunk branch;<br>
     3. After development is completed, the development branch will be quickly merged into the test branch;<br>
     4. After development is completed, quickly initiate a Merge Request to the remote target branch in IDEA;<br>
     5. After the release is completed, quickly merge the release branch into the trunk branch and tag it;<br>
     6. Standardization check of Commit information when submitting code<br>

    <br>
    这是一个适用于<a href="https://xiaolyuh.blog.csdn.net/article/details/105180250">mrtf git flow</a> (master,release,test,feature) 流程的分支管理插件 <a href="https://xiaolyuh.blog.csdn.net/article/details/105150446">使用指南</a>。<br>
    最大优势是减少敏捷开发过程中切换分支和合并分支的操作，降低分支管理的人力成本。<br>
     <br>
    主要解决的问题：<br>
    1. 简化日常工作中分支操作步骤，比如新建分支、提测、发布、Merge Request等操作； <br>
    2. 降低分支操作过程中发生错误的概率； <br>
    3. 代码提交Commit 信息规范校验； <br>
    <br>
    主要功能如下：
    1. 基于主干分支快速新建开发分支和修复分支；<br>
    2. 基于主干分支快速重建测试分支和发布分支；<br>
    3. 开发完成后将快速将开发分支合并到测试分支；<br>
    4. 开发完成后快速在IDEA发起Merge Request到远程目标分支；<br>
    5. 发布完成后快速将发布分支合并到主干分支并打TAG；<br>
    6. 代码提交时Commit信息规范化检查<br>
    ]]>
    </description>

    <depends>com.intellij.modules.vcs</depends>
    <depends>com.intellij.tasks</depends>
    <depends>Git4Idea</depends>

    <!--<idea-version since-build="191" until-build="202.*"/>-->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <applicationService serviceInterface="com.github.xiaolyuh.git.GitFlowPlus"
                            serviceImplementation="com.github.xiaolyuh.git.GitFlowPlusImpl"/>
        <!-- Add your extensions here -->
        <applicationService serviceInterface="com.github.xiaolyuh.git.Git"
                            serviceImplementation="com.github.xiaolyuh.git.GitImpl"/>

        <applicationService serviceImplementation="com.github.xiaolyuh.action.options.LocalConfig"/>

        <notificationGroup displayType="BALLOON" id="GitFlowPlusNotification"/>

<!--
        <checkinHandlerFactory id="GitFlowPlusCommitSync"  implementation="com.github.xiaolyuh.analysis.GitFlowPlusCommitSyncHandlerFactory"/>
-->
        <checkinHandlerFactory id="GitFlowPlusCommitCheck" implementation="com.github.xiaolyuh.analysis.GitFlowPlusCommitCheckinHandlerFactory"/>

        <completion.contributor language="TEXT"
                                order="first, before commitCompletion"
                                implementationClass="com.github.xiaolyuh.issue.IssueCompletionContributor" />
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <group id="GitFlowPlus.Menu" text="GitFlowPlus" description="GIT分支管理" icon="/icons/icon.svg" popup="true">

            <add-to-group group-id="MainToolBar" anchor="last"/>

            <!--配置管理-->
            <action id="GitFlowPlus.InitPluginAction" class="com.github.xiaolyuh.action.InitPluginAction"
                    text="初始化配置" description="初始化仓库配置，如果测试分支与发布分支不存在，将基于master新建" icon="/icons/config.svg"/>
            <separator/>

            <!--新建分支-->
            <action id="GitFlowPlus.NewFeatureAction" class="com.github.xiaolyuh.action.NewFeatureAction"
                    text="新建开发分支" description="新建开发分支，并推送到远程仓库" icon="/icons/feature.svg"/>
            <action id="GitFlowPlus.NewHotFixAction" class="com.github.xiaolyuh.action.NewHotFixAction"
                    text="新建修复分支" description="新建修复分支，并推送到远程仓库"/>
            <separator/>

            <group id="GitFlowPlus.RebuildBranch" popup="true" text="重建分支"
                   class="com.github.xiaolyuh.action.RebuildActionGroup">
                <action id="GitFlowPlus.RebuildTestAction" class="com.github.xiaolyuh.action.RebuildTestAction"
                        text="重建测试分支" description="重建测试分支，并推送到远程仓库，原来的分支将被删除" icon="/icons/test.svg"/>
                <action id="GitFlowPlus.RebuildReleaseAction" class="com.github.xiaolyuh.action.RebuildReleaseAction"
                        text="重建发布分支" description="重建发布分支，并推送到远程仓库，原来的分支将被删除" icon="/icons/release.svg"/>
            </group>
            <separator/>

            <!--解决冲突-->
            <action id="GitFlowPlus.ResolveConflicts" class="com.github.xiaolyuh.action.GitResolveConflictsAction"
                    text="解决冲突" description="解决冲突"/>
            <separator/>

            <!--merge request-->
            <action id="GitFlowPlus.MergeRequestAction" class="com.github.xiaolyuh.action.MergeRequestAction"
                    text="Merge Request" description="发起 code review" icon="/icons/mergeToTest.svg">
            </action>
            <separator/>

            <!--提测-->
            <action id="GitFlowPlus.StartTestAction" class="com.github.xiaolyuh.action.StartTestAction"
                    text="提测" description="将当前开发分支合并到test分支" icon="/icons/mergeToTest.svg">
            </action>
            <separator/>

            <!--发布流程-->
            <action id="GitFlowPlus.StartReleaseAction" class="com.github.xiaolyuh.action.StartReleaseAction"
                    text="开始发布" description="将当前开发分支合并到发布分支，加锁，防止再有开发分支合并到发布分支" icon="/icons/start.svg"/>
            <action id="GitFlowPlus.FinishReleaseAction" class="com.github.xiaolyuh.action.FinishReleaseAction"
                    text="发布完成" description="解锁，并将发布分支合并到主干分支" icon="/icons/finished.svg"/>
            <separator/>

            <action id="GitFlowPlus.DeleteBranchAction" class="com.github.xiaolyuh.action.DeleteBranchAction"
                    text="删除分支" description="批了删除无效分支" icon="/icons/delete.svg"/>
            <separator/>

            <!--帮助-->
            <action id="GitFlowPlus.HelpAction" class="com.github.xiaolyuh.action.HelpAction"
                    text="帮助" description="帮助" icon="/icons/help.svg"/>
        </group>

        <!--<action id="GitFlowPlus.EscalationCommitAction" class="com.github.xiaolyuh.action.EscalationCommitAction"
                text="上报Commit信息" description="上报Commit信息" icon="/icons/server.svg"/>

        <group id="GitFlowPlus.vcs.Log.ContextMenu">
            <reference id="GitFlowPlus.EscalationCommitAction"/>
            <add-to-group group-id="Vcs.Log.ContextMenu" relative-to-action="Vcs.CopyRevisionNumberAction" anchor="after"/>
        </group>
        <group id="GitFlowPlus.vcs.FileHistory.ContextMenu">
            <reference id="GitFlowPlus.EscalationCommitAction"/>
            <add-to-group group-id="Vcs.FileHistory.ContextMenu" relative-to-action="Vcs.CopyRevisionNumberAction" anchor="after"/>
        </group>-->
    </actions>
</idea-plugin>